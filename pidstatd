#!/usr/local/bin/perl -Tw
# pidstatd - distributed lock handler for perl IPC::Locker
# $Id: pidstatd,v 1.7 2003/11/18 15:56:02 wsnyder Exp $
# Wilson Snyder <wsnyder@wsnyder.org>
################ Introduction ################
#
# Copyright 1999-2003 by Wilson Snyder.  This program is free software;
# you can redistribute it and/or modify it under the terms of either the GNU
# General Public License or the Perl Artistic License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
######################################################################

require 5.004;
use lib './blib/lib';	# testing
use Getopt::Long;
use Pod::Text;
use IPC::PidStat::PidServer;
use strict;

BEGIN { $ENV{PATH} = '/usr/ucb:/bin' }	# Secure path

######################################################################
# configuration

######################################################################
# globals

use vars qw($Pid);

######################################################################
# main

my $Debug = 0;
my %server_params = ();

if (!GetOptions (
		 "help"		=> \&usage,
		 "debug"	=> \&debug,
		 "version"	=> \&version,
		 "port=i"	=> sub {$server_params{port} = $_[1];},
		 )) {
    &usage(); }

# Loop in case something kills us
$SIG{HUP}  = \&sig_HUP;
$SIG{CHLD} = \&sig_HUP;
while (1) {
    print "Starting server\n" if $Debug;
    unless ($Pid = fork) {
        IPC::PidStat::PidServer->new(%server_params)->start_server ();
	exit(0);
    }
    waitpid($Pid,0) if $Pid;
    warn "%Warning: Server aborted\n" if $Debug;
    sleep(1);
    kill 9, $Pid if $Pid;
    $Pid = 0;
    sleep(1);
}

exit (0);

sub sig_HUP {
    kill 9, $Pid if $Pid;
    $Pid = 0;
}

######################################################################

sub usage {
    print '$Id: pidstatd,v 1.7 2003/11/18 15:56:02 wsnyder Exp $ ', "\n";
    $SIG{__WARN__} = sub{};	#pod2text isn't clean.
    pod2text($0);
    exit(1);
}

sub version {
    print 'Version: $Id: pidstatd,v 1.7 2003/11/18 15:56:02 wsnyder Exp $ ';
    print "\n";
    exit (1);
}

sub debug {
    $Debug = 1;
    $IPC::PidStat::PidServer::Debug = 1;
}

######################################################################
__END__

=pod

=head1 NAME

pidstatd - Determine if process ID is running for Perl IPC::Locker

=head1 SYNOPSIS

B<pidstatd>
[ B<--help> ]
[ B<--port=>I<port> ]
[ B<--version> ]

=head1 DESCRIPTION

Pidstatd will start a UDP daemon.  The daemon responds to requests that
contain a PID with a packet indicating the PID and if the PID currently
exists.

The Perl IPC::Locker package optionally uses this daemon to break locks
for PIDs that no longer exists.

=head1 ARGUMENTS

=over 4

=item --help

Displays this message and program version and exits.

=item --port

Specifies the port number to be used.

=item --version

Displays program version and exits.

=back

=head1 SEE ALSO

C<IPC::Locker>, C<lockerd>

=head1 AUTHORS

Wilson Snyder <wsnyder@wsnyder.org>

=cut
######################################################################
